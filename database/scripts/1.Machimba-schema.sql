-- MySQL Script generated by MySQL Workbench
-- Mon Nov 18 19:02:39 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Machimba
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Machimba` ;

-- -----------------------------------------------------
-- Schema Machimba
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Machimba` ;
USE `Machimba` ;

-- -----------------------------------------------------
-- Table `Machimba`.`product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`product` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`product` (
  `product_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(300) NULL,
  `collection` ENUM('Antique Collection', 'Permanent Collection', 'Unique Collection', 'Vintage Summer Collection', 'New York Collection', 'Hilma Collection') NOT NULL,
  `price` INT UNSIGNED NOT NULL,
  `image` VARCHAR(200) NULL,
  `color` VARCHAR(45) NOT NULL,
  `material` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`product_id`),
  UNIQUE INDEX `image_UNIQUE` (`image` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`purchase_history`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`purchase_history` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`purchase_history` (
  `history_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `purchase_id` INT UNSIGNED NOT NULL,
  `client_id` INT UNSIGNED NOT NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('pendiente', 'aceptado/solicitado') NOT NULL,
  `product_name` VARCHAR(45) NOT NULL,
  `product_quantity` INT NOT NULL,
  `product_color` VARCHAR(45) NOT NULL,
  `product_material` VARCHAR(45) NOT NULL,
  `product_collection` ENUM('Antique Collection', 'Permanent Collection', 'Unique Collection', 'Vintage Summer Collection', 'New York Collection', 'Hilma Collection') NOT NULL,
  `product_price` INT UNSIGNED NOT NULL,
  `product_subtotal` INT UNSIGNED NULL,
  PRIMARY KEY (`history_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`user` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`user` (
  `user_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `register_date` DATETIME NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX `user_name_UNIQUE` (`user_name` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`client`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`client` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`client` (
  `client_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(100) NULL,
  `phone` VARCHAR(45) NULL,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`client_id`),
  INDEX `fk_client_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_client_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Machimba`.`user` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`purchase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`purchase` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`purchase` (
  `purchase_id` INT NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(100) NULL,
  `phone` VARCHAR(45) NULL,
  `date` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `status` ENUM('pendiente', 'aceptado/solicitado') NOT NULL DEFAULT 'pendiente',
  `client_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`purchase_id`),
  UNIQUE INDEX `purchase_id_UNIQUE` (`purchase_id` ASC),
  INDEX `fk_purchase_client1_idx` (`client_id` ASC),
  CONSTRAINT `fk_purchase_client1`
    FOREIGN KEY (`client_id`)
    REFERENCES `Machimba`.`client` (`client_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`purchase_has_product`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`purchase_has_product` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`purchase_has_product` (
  `purchase_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  `quantity` INT UNSIGNED NOT NULL,
  `subtotal` INT UNSIGNED NULL,
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`),
  INDEX `fk_purchase_has_product_product1_idx` (`product_id` ASC),
  INDEX `fk_purchase_has_product_purchase1_idx` (`purchase_id` ASC),
  CONSTRAINT `fk_purchase_has_product_purchase1`
    FOREIGN KEY (`purchase_id`)
    REFERENCES `Machimba`.`purchase` (`purchase_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_purchase_has_product_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `Machimba`.`product` (`product_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Machimba`.`worker`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Machimba`.`worker` ;

CREATE TABLE IF NOT EXISTS `Machimba`.`worker` (
  `worker_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`worker_id`),
  INDEX `fk_worker_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_worker_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `Machimba`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Machimba`;

DELIMITER $$

USE `Machimba`$$
DROP TRIGGER IF EXISTS `Machimba`.`copy_phone_address` $$
USE `Machimba`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Machimba`.`copy_phone_address` AFTER UPDATE ON `purchase` FOR EACH ROW
BEGIN
  IF (SELECT address FROM `Machimba`.`client` WHERE client_id = NEW.client_id) IS NULL THEN
    -- Si no tiene dirección, copiamos la dirección actualizada de purchase
    UPDATE `Machimba`.`client`
    SET address = NEW.address
    WHERE client_id = NEW.client_id;
  END IF;

  IF (SELECT phone FROM `Machimba`.`client` WHERE client_id = NEW.client_id) IS NULL THEN
    -- Si no tiene teléfono, copiamos el teléfono actualizado de purchase
    UPDATE `Machimba`.`client`
    SET phone = NEW.phone
    WHERE client_id = NEW.client_id;
  END IF;
END$$


USE `Machimba`$$
DROP TRIGGER IF EXISTS `Machimba`.`register_purchase` $$
USE `Machimba`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Machimba`.`register_purchase` AFTER UPDATE ON `purchase` FOR EACH ROW
BEGIN
    -- Verificamos si el estado de la compra cambió de 'pendiente' a cualquier otro estado
    IF OLD.status = 'pendiente' AND NEW.status != 'pendiente' THEN
        -- Insertamos en el historial los datos relacionados con la compra actual
        INSERT INTO purchase_history (purchase_id, date, status, client_id, product_quantity, product_name, product_price, product_collection, product_color, product_material, product_subtotal)
        SELECT 
            purchase.purchase_id, 
            purchase.date, 
            purchase.status, 
            purchase.client_id, 
            php.quantity, 
            product.name, 
            product.price, 
            product.collection, 
            product.color, 
            product.material, 
            php.subtotal
        FROM 
            purchase
        JOIN 
            purchase_has_product AS php ON php.purchase_id = purchase.purchase_id
        JOIN 
            product ON product.product_id = php.product_id
        WHERE 
            purchase.purchase_id = NEW.purchase_id;
    END IF;
END$$


USE `Machimba`$$
DROP TRIGGER IF EXISTS `Machimba`.`purchase_has_product_BEFORE_INSERT` $$
USE `Machimba`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Machimba`.`purchase_has_product_BEFORE_INSERT` BEFORE INSERT ON `purchase_has_product` FOR EACH ROW
BEGIN
    DECLARE product_price INT;

    -- Obtener el precio del producto
    SELECT `price` INTO product_price
    FROM `Machimba`.`product`
    WHERE `product_id` = NEW.`product_id`;

    -- Calcular el subtotal multiplicando el precio por la cantidad
    SET NEW.`subtotal` = product_price * NEW.`quantity`;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
